name: Continuous integration

on:
  push:
    branches:
      - main
      - release-**
  pull_request:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  # Run unit tests
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        qgis_version: [release-3_22, release-3_24, latest]
    env:
      QGIS_TEST_VERSION: ${{ matrix.qgis_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Test on QGIS
        run: docker-compose -f .docker/docker-compose.gh.yml run qgis /usr/src/.docker/run-docker-tests.sh
      - name: Test on QGIS with PG
        run: docker-compose -f .docker/docker-compose.gh.yml run -e "PGHOST=postgres11" qgis /usr/src/.docker/run-docker-tests.sh

  release:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    if: ${{ github.event_name == 'push' || github.event_name == 'release' }}
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Set version
      run: sed -i setup.py -e "s/\[VERSION\]/${GIT_TAG_NAME}/g"
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Publish distribution 📦 to Test PyPI
      if: ${{ github.event_name == 'push' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution 📦 to PyPI
      if: ${{ github.event_name == 'release' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
